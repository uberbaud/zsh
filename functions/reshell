# @(#)[:%=cM@&J?*$Pf!Do}|sJ5: 2017/05/20 21:18:52 tw@csongor.lan]
# vim: filetype=zsh tabstop=4 textwidth=72 noexpandtab

# SYNOPSIS: Give a clean shell experience

emulate -L zsh
setopt local_options local_traps pipe_fail bsd_echo

needs =getent readlink /usr/bin/env

local s=$(=getent shells $(which -p $1))
(($#s))|| die "%B${1:gs/%/%%}%b is not a recognized shell."
shift

# we're entering the new shell so let the user know
printf "\e[1;43;37m%${COLUMNS}s\r ─ %s ─\e[0m\n" '' $s # banner

typeset -a RESHELL_VARS=( DISPLAY TERM )
local ENV=${XDG_CONFIG_HOME:-$HOME/.config}/${s##*/}/env
echo '  : ' $ENV
[[ -f $ENV ]]&& {
	ENV=$(readlink -fn $ENV)
echo '  : ' $ENV
	if [[ -f $ENV ]]; then
		RESHELL_VARS+=( ENV )
	else
		warn '%Benv%b exists but links to a non-existent file.'
	fi
  }

typeset -a setenvs=( )
for v ($RESHELL_VARS) [[ -n ${(P)v} ]]&& setenvs+=( $v="${(P)v}" )
printf '  > %s\n' $setenvs

/usr/bin/env -i $setenvs $s -l "$@"

# when we're done, let the user know
printf "\e[1;43;37m%${COLUMNS}s\r ─ %s ─\e[0m\n" '' $SHELL # banner

# Copyright © 2017 by Tom Davis <tom@greyshirt.net>.
