# @(#)[:Ap$)AX3uRfcc&*eNcFG&: 2017/07/03 18:01:16 tw@csongor.lan]
# vim: filetype=zsh tabstop=4 textwidth=72 noexpandtab

# SYNOPSIS: Create all of the needed variables and functions.

emulate -L zsh
setopt local_options local_traps pipe_fail bsd_echo

needs sqlite3 egrep autopage awk sort sed mv

(($+amuse_home)) || amuse_home=${me}/util/amuse
(($+amuse_db))   || amuse_db=${amuse_home}/amuse.db
(($+music_dir))  || music_dir=${HOME}/media/music
(($+music_list)) || music_list=${music_dir}/togo.lst

test -d $amuse_home || die "No such directory %B${amuse_home:gs/%/%%}%b."
test -f $amuse_db   || die "No such file %B${amuse_db:gs/%/%%}%b."
test -d $music_dir  || die "No such directory %B${music_dir:gs/%/%%}%b."
test -f $music_list || cat > $music_list <<----
	; vim: nospell ft=commented
	---

typeset -xm amuse_\* music_\*

function d {
	typeset -- key="$*"
	# escape quotes for SQL
	key="${key//\'/\'\'}"

	sqlite3 $amuse_db <<----
		SELECT printf( '%s (%s) %d', title, performer, duration / 1000 )
		  FROM mediainfo
		 WHERE title LIKE '%${key}%'
		;
	---
}

function t {
	needs ${amuse_home}/prac/time-played
	echo
	echo
	${amuse_home}/prac/time-played
}

function p {
	t=( ${(f)"$(<$music_list)"} )
	a $t
  }

function m {
	typeset -a comments=( ${(f)"$(egrep '^;' $music_list)"} )
	printf '%s\n' $argv $comments > "$music_list"
}

function l {
	typeset -a pgm=(
		'/^[^;]/'	'{ print $7 "/" $8; }'
		'/^; =.=/'	'{ print " " substr( $0, 2 ); }'
	  )
	autopage awk -F'/' "${pgm[*]}"  "$music_list"
}

function _LG {
	declare -a get_groups_awk_pgm=(
		'/^[^;]/'	'{ bands[$6]; }'
		'END'		'{ for (b in bands) print b; }'
	  )
	awk -F/ "$get_groups_awk_pgm" $music_list | sort
}
function lg { autopage _LG; }
function L { m ${music_dir}/${1}*/*/*; }

function N {
	typeset -- marker='^; =.=$'
	typeset -- current="$( awk -F= "/$marker/ { print \$2; }" $music_list )"
	typeset -i asc=$(( $(printf '%d' \'$current) + 1 ))
	typeset -- next=$( printf "\x$(printf '%x\n' $asc)" )
	L $next
	typeset -- sponge=$(sed -e "s/$marker/; =$next=/" $music_list)
	cat <<<$sponge  >$music_list
	lg
}

function v {
	vim $music_list
	lg
}

function u {
	warn 'Removing %F{4}amuse%f functions.'
	set_prompt
	unset -f L N _LG d h l lg m p t u v
	cd $PRE_AMUSE_PWD
}

function h {
	typeset B=$'\e[1m';		b=$'\e[22m'
	typeset S=$'\e[34m';	s=$'\e[39m'
	typeset N=$'\e[0m'
	cat <<----
	  a  => play songs given on command line.
	  d  => show info for song on command line.
	  t  => show time info for song playing.
	  p  => play songs in ${B}togo.lst${b}.
	  m  => make a new ${B}togo.lst${b} from the songs given on command line
	  L  => make a new ${B}togo.lst${b} from \$music_dir/\${1}*/*/*
	  N  => make a new ${B}togo.lst${b} using *next* letter in alphabet for ${S}L${s}
	  l  => list songs in ${B}togo.lst${b}
	  lg => list groups in ${B}togo.lst${b}
	  r  => rerun 
	  v  => edit ${B}togo.lst${b}
	  u  => unset all of the special amuse bits
	---
}

PS1='%K{3}%F{7}%B amuse %b%f%k%s '
PRE_AMUSE_PWD=$PWD
cd $music_dir

# Copyright Â© 2017 by Tom Davis <tom@greyshirt.net>.
