#!/usr/bin/env zsh
# $Id: msg:from,v 1.8 2016/10/25 07:47:28 tw Exp $
# vim: filetype=zsh tabstop=4 textwidth=72 noexpandtab

emulate -L zsh
setopt local_options local_traps pipe_fail bsd_echo
setopt numeric_glob_sort null_glob

typeset -ga MSGs=()
typeset -- OLDPWD=$PWD
cd $(mhpath)

typeset -a msgList=( [1-9]* )
(($#msgList))|| {
	echo "msg:from: no message in $(folder -fast)" >&2
	cd $OLDPWD
	return
  }

typeset -a showcmd=(
	'if ($0!~/@/)'
		'{INFROM=1;}'
	'else'
		'{printf( "%-4s %s\n", FILENAME, $0 ); nextfile;}'
  )
typeset -- Q="${1:+ && /$1/}"
typeset -- EOH=""
(($#))||   EOH="${1:-printf(\"%-4s %s\n\",FILENAME,\"<X From:>\"); }"

typeset -a awkpgm=(
	'LASTFILE != FILENAME'	'{INFROM=0;LASTFILE=FILENAME;}'
	"/^From:/ && /</$Q"		'{$0=$2;'"$showcmd}" # From: "X" <x@m.io>
	"/^From:/$Q"			'{sub(/^From: */,"");'"$showcmd}" # From: x@m.io
	'INFROM && /^[A-Z]/'	"{${EOH/X/BAD}nextfile;}" # split header
	'INFROM && /^[ \t]/'	'{$0=$2;'"$showcmd}" # split header
	'INFROM && /^$/'		"{${EOH/X/BAD}nextfile;}"
	'/^$/'					"{${EOH/X/no}nextfile;}"
  )
# if we get to the body without a match, show that, unless we're looking 
# for a particular pattern, in which case no From doesn't match

#print -r -- "$awkpgm"
#return

awk -F'[<>][ \t]*' "$awkpgm" $msgList | while read -r ln; do
	echo "$ln"
	[[ $ln =~ [[:digit:]]+ ]]&& MSGs+=( $MATCH )
done

cd $OLDPWD

# Copyright Â© 2016 by Tom Davis <tom@greyshirt.net>.
