# @(#)[:Yi}e6Hh)3rU?Za!_g,N&: 2017/05/13 01:28:21 tw@csongor.lan]
# vim: filetype=zsh tabstop=4 textwidth=72 noexpandtab

# expect `msg:headers _file_ _field-key_ _filter-regex_`
(($#))||	die 'msg:headers: Missing %Bmsg-number%b.'
((3<$#))&&	die 'msg:headers: Too many arguments.'

local TAB=$'\t' NL=$'\n' CRLF=$'\r\n' CR=$'\r' msg=$(mhpath)/$1

[[ -f $msg ]]|| die "msg:headers: No such message %B$1%b."
local M="$(< $msg)"
M=${${M//$CRLF/$NL}//$CR/$NL}				# canonicalize newlines
M=${M%%$NL$NL*}								# remove body (keep head)
M=${M//$TAB/ }								# tabs to spaces
M=${M//$NL / }								# unwrap wrapped lines

(($#==1))&& { printf '%s\n' $M; return; }	# no field-key, so no filtering

local fld_regex="^$2$" matched=false

if (($#==2)); then
	function testfield {
		[[ ${1%%:*} =~ $fld_regex ]]||	return 1
		matched=true
		return 0
	}
elif (($#==3)); then
	local filter=$3
	function testfield {
		[[ ${1%%:*} =~ $fld_regex ]]||	return 1
		[[ ${1#*:} =~ $filter ]]||		return 1
		matched=true
		return 0
	}
else
	die 'Bad programmer!' 'Someone screwed up'
fi

for h (${(f)M}) { testfield $h && printf '%s: %s\n' $msg $h; }

$matched

# Copyright Â© 2017 by Tom Davis <tom@greyshirt.net>.
